### hackbench a general scheduler benchmark and stress test that is
### sensitive to regressions in the scheduler fast-path. It creates groups
### of threads or processes (depending on configuration) that communicate
### via pipes or sockets (depending on configuration).
###
### Note that while hackbench is often considered to be a scheduler benchmark,
### it is particularly weak when used with pipes. Given multiple senders and
### receivers sharing pipes that are unsynchronised, it is dominated heavily
### by a mutex protecting the pipe structures and a spinlock protecting the
### queue for wakeups. A significant percentage of time is spend acquiring
### and releasing those locks as well as the inevitable bounces of cache
### line data as waker/wakee processes do not run on the same CPUs but
### instead select CPUs that are nearby during wakeups.
export MMTESTS="hackbench-process-pipes hackbench-process-sockets"

# HackBench
export HACKBENCH_ITERATIONS=3
export HACKBENCH_MIN_GROUPS=1
export HACKBENCH_MAX_GROUPS=$((NUMCPUS*4))
if [[ `uname -m` =~ i.86 ]]; then
	export HACKBENCH_MAX_GROUPS=128
fi
if [ $HACKBENCH_MAX_GROUPS -gt 296 ]; then
	export HACKBENCH_MAX_GROUPS=296
fi
export HACKBENCH_LOOPS=10000
export MMTESTS_THREAD_CUTOFF=

# when run in container
export CONTAINER_NO_PIDS_LIMIT=yes
